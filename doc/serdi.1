.TH SERDI 1 "05 May 2019"

.SH NAME
.B serdi \- Read and write RDF syntax

.SH SYNOPSIS
serdi [\fIOPTION\fR]... \fIINPUT\fR...

.SH OPTIONS

.TP
.BR \-I
Set input base URI.

.TP
.BR \-a
Write ASCII output if possible.

.TP
.BR \-b
Fast bulk output for large serialisations.

.TP
.BR \-c " " \fIPREFIX\fR
Chop \fIPREFIX\fR from matching blank node IDs.

.TP
.BR \-e
Eat input one character at a time, rather than a page at a time which is the default.
This is useful when reading from a pipe since output will be generated immediately as input arrives, rather than waiting until an entire page of input has arrived.
With this option serdi uses one page less memory, but will likely be significantly slower.

.TP
.BR \-f
Keep full URIs in input (don't qualify with namespace prefixes or make URIs relative).

.TP
.BR \-h
Print the command line options.

.TP
.BR \-i " " \fISYNTAX\fR
Read input as \fISYNTAX\fR.
Valid values (case-insensitive): \*(lqturtle\*(rq, \*(lqntriples\*(rq, \*(lqtrig\*(rq, \*(lqnquads\*(rq.

.TP
.BR \-k " " \fIBYTES\fR
Parser stack size.

.TP
.BR \-l
Lax (non-strict) parsing.

.TP
.BR \-m
Build and serialise a model.
This loads the complete input data into memory before writing the output.
This will normalize statement order, at the cost of performance and memory consumption.

.TP
.BR \-o " " \fISYNTAX\fR
Write output as \fISYNTAX\fR.
Valid values (case-insensitive): \*(lqturtle\*(rq, \*(lqntriples\*(rq, \*(lqtrig\*(rq, \*(lqnquads\*(rq, \*(lqempty\*(rq.
When \*(lqempty\*(rq is given, output is suppressed, so only errors will be printed.

.TP
.BR \-p " " \fIPREFIX\fR
Add \fIPREFIX\fR to blank node IDs.

.TP
.BR \-q
Suppress all output except data.

.TP
.BR \-r " " \fIROOT_URI\fR
Keep relative URIs within \fIROOT_URI\fR.

.TP
.BR \-S
Stream model quickly without inlining.
This only has an effect when a model is used, and disables searching and statement reordering for pretty printing.
Statements will be written in simple sorted order, which is faster, but may result in less readable output in Turtle or TriG.

.TP
.BR \-s " " \fIINPUT\fR
Parse \fIINPUT\fR as a string.

.TP
.BR \-t
Write terser output without newlines.

.TP
.BR \-v
Display version information and exit.

.SH AUTHOR
Serdi was written by David Robillard <d@drobilla.net>

.SH COPYRIGHT
Copyright \(co 2011-2020 David Robillard.
.br
License: <http://www.opensource.org/licenses/isc>
.br
This is free software; you are free to change and redistribute it.
.br
There is NO WARRANTY, to the extent permitted by law.

.SH "SEE ALSO"
<http://drobilla.net/software/serd>
